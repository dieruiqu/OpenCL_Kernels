var areaJSON='{"columns":["", "ALUTs", "FFs", "RAMs", "DSPs", "Details"], "debug_enabled":"true", "type":"module", "total_percent":[74.6792, 56.4133, 24.7083, 33.7705, 21.0526], "total":[128126, 112235, 412, 72], "name":"Kernel System", "max_resources":[227120, 454240, 1220, 342], "children":[{"name":"Board interface", "type":"resource", "data":[24256, 20822, 143, 0], "details":[{"type":"text", "text":"Platform interface logic."}]}, {"name":"Global interconnect", "type":"resource", "data":[6577, 8915, 0, 0], "details":[{"type":"text", "text":"Global interconnect for 2 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect."}]}, {"name":"matrixMult_32_2", "compute_units":1, "type":"function", "total_percent":[56.0473, 42.8377, 18.1618, 22.0492, 21.0526], "total_kernel_resources":[97293, 82498, 269, 72], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"text", "text":"Achieved kernel vectorization: 2"}], "children":[{"name":"Function overhead", "type":"resource", "data":[1710, 1582, 0, 0], "details":[{"type":"text", "text":"Kernel dispatch logic."}]}, {"name":"matrix_mult.cl:111 (A_local)", "type":"resource", "data":[0, 0, 26, 0], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":111}]], "details":[{"type":"table", "Local memory":"Optimal", "Requested size":"4096 bytes", "Implemented size":"12288 bytes", "Number of banks":"1", "Bank width":"1024 bits", "Bank depth":"32 words", "Total replication":"3", "Additional information":[{"type":"text", "text":"Requested size 4096 bytes, implemented size 12288 bytes, replicated 3 times total, stall-free, 1 read and 1 write. "}, {"type":"text", "text":"Replicated 3 times to efficiently support multiple simultaneous workgroups. This replication resulted in no increase in actual block RAM usage."}, {"type":"text", "text":"See %L for more information.", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.altera.com/documentation/mwh1391807516407.html#chn1469549457114"}]}]}]}, {"name":"matrix_mult.cl:112 (B_local)", "type":"resource", "data":[0, 0, 52, 0], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":112}]], "details":[{"type":"table", "Local memory":"Optimal", "Requested size":"4096 bytes", "Implemented size":"12288 bytes", "Number of banks":"2 (banked on lowest dimension)", "Bank width":"1024 bits", "Bank depth":"16 words", "Total replication":"3", "Additional information":[{"type":"text", "text":"Requested size 4096 bytes, implemented size 12288 bytes, replicated 3 times total, stall-free, 2 reads and 2 writes. "}, {"type":"text", "text":"Replicated 3 times to efficiently support multiple simultaneous workgroups. This replication resulted in no increase in actual block RAM usage."}, {"type":"text", "text":"Banked on lowest dimension into 2 separate banks."}, {"type":"text", "text":"See %L for more information.", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.altera.com/documentation/mwh1391807516407.html#chn1469549457114"}]}]}]}, {"name":"matrixMult_32_2.B0", "type":"basicblock", "children":[{"name":"Computation", "type":"resource", "children":[{"name":"matrix_mult.cl:123", "type":"resource", "data":[66, 0, 0, 2], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":123}]], "children":[{"name":"32-bit Integer Multiply", "type":"resource", "count":1, "data":[66, 0, 0, 2]}], "replace_name":"true"}, {"name":"matrix_mult.cl:124", "type":"resource", "data":[66, 0, 0, 0], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":124}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":2, "data":[66, 0, 0, 0]}], "replace_name":"true"}, {"name":"matrix_mult.cl:131", "type":"resource", "data":[35, 1, 0, 0], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":131}]], "children":[{"name":"Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0]}], "replace_name":"true"}, {"name":"matrix_mult.cl:139", "type":"resource", "data":[99, 0, 0, 2], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":139}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0]}, {"name":"32-bit Integer Multiply", "type":"resource", "count":1, "data":[66, 0, 0, 2]}], "replace_name":"true"}, {"name":"matrix_mult.cl:140", "type":"resource", "data":[99, 0, 0, 2], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":140}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0]}, {"name":"32-bit Integer Multiply", "type":"resource", "count":1, "data":[66, 0, 0, 2]}], "replace_name":"true"}]}]}, {"name":"matrixMult_32_2.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[4433, 6373, 86, 0], "details":[{"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[4433, 6373, 86, 0]}]}, {"name":"Cluster logic", "type":"resource", "data":[10, 159, 3, 0], "details":[{"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"No Source Line", "type":"resource", "data":[62, 99, 0, 0], "debug":[[{"filename":"", "line":0}]], "children":[{"name":"Or", "type":"resource", "count":2, "data":[11, 0, 0, 0]}, {"name":"Work-group limiter exit", "type":"resource", "count":3, "data":[51, 99, 0, 0]}]}, {"name":"matrix_mult.cl:131", "type":"resource", "data":[101, 1, 0, 0], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":131}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":2, "data":[66, 0, 0, 0]}, {"name":"Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0]}], "replace_name":"true"}, {"name":"matrix_mult.cl:139", "type":"resource", "data":[3314, 3612, 43, 0], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":139}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[3247, 3588, 43, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced non-aligned cached LSU.  Load with a private 64 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}]}, {"name":"Store", "type":"resource", "count":1, "data":[34, 24, 0, 0], "details":[{"type":"text", "text":"Store uses a Local-pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free write to memory declared on matrix_mult.cl:111."}]}], "replace_name":"true"}, {"name":"matrix_mult.cl:140", "type":"resource", "data":[3348, 3636, 43, 0], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":140}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[3247, 3588, 43, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced non-aligned cached LSU.  Load with a private 64 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}]}, {"name":"Store", "type":"resource", "count":2, "data":[68, 48, 0, 0], "details":[{"type":"text", "text":"Store uses a Local-pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free write to memory declared on matrix_mult.cl:112."}]}], "replace_name":"true"}, {"name":"matrix_mult.cl:155", "type":"resource", "data":[83050, 64411, 0, 64], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":155}]], "children":[{"name":"Floating-point Add", "type":"resource", "count":64, "data":[63936, 45952, 0, 0]}, {"name":"Floating-point Multiply", "type":"resource", "count":64, "data":[17536, 15360, 0, 64]}, {"name":"Load", "type":"resource", "count":3, "data":[1578, 3099, 0, 0], "details":[{"type":"text", "text":"Load uses a Local-pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free read from memory declared on matrix_mult.cl:111."}, {"type":"text", "text":"Stall-free read from memory declared on matrix_mult.cl:112."}]}], "replace_name":"true"}]}]}, {"name":"matrixMult_32_2.B2", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[206, 325, 0, 0], "details":[{"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[206, 325, 0, 0]}]}, {"name":"Cluster logic", "type":"resource", "data":[145, 63, 0, 0], "details":[{"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"No Source Line", "type":"resource", "data":[64, 64, 0, 0], "debug":[[{"filename":"", "line":0}]], "children":[{"name":"Select", "type":"resource", "count":2, "data":[64, 64, 0, 0]}]}, {"name":"matrix_mult.cl:164", "type":"resource", "data":[485, 2172, 16, 2], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":164}]], "children":[{"name":"64-bit Integer Add", "type":"resource", "count":1, "data":[65, 0, 0, 0]}, {"name":"64-bit Integer Multiply", "type":"resource", "count":1, "data":[66, 0, 0, 2]}, {"name":"Store", "type":"resource", "count":1, "data":[354, 2172, 16, 0], "details":[{"type":"text", "text":"Store uses a Burst-coalesced LSU"}]}], "replace_name":"true"}]}]}]}]}';
var area_srcJSON='{"max_resources":[227120,454240,1220,342],"name":"Kernel System","children":[{"name":"Board interface","type":"resource","data":[24256,20822,143,0],"details":[{"text":"Platform interface logic.","type":"text"}]},{"name":"Global interconnect","type":"resource","data":[6577,8915,0,0],"details":[{"text":"Global interconnect for 2 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect.","type":"text"}]},{"name":"matrixMult_32_2","total_kernel_resources":[97293,82498,269,72],"debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":111}]],"type":"function","total_percent":[56.0473,42.8377,18.1618,22.0492,21.0526],"children":[{"detail":[{"text":"Feedback + Cluster logic","type":"text"}],"name":"Data control overhead","type":"resource","data":[155,222,3,0]},{"name":"Function overhead","type":"resource","data":[1710,1582,0,0],"details":[{"text":"Kernel dispatch logic.","type":"text"}]},{"name":"matrix_mult.cl:111 (A_local)","type":"resource","data":[0,0,26,0],"details":[{"Total replication":3,"Number of banks":1,"Bank depth":"32 words","Additional information":[{"text":"Requested size 4096 bytes, implemented size 12288 bytes, replicated 3 times total, stall-free, 1 read and 1 write. ","type":"text"},{"text":"Replicated 3 times to efficiently support multiple simultaneous workgroups. This replication resulted in no increase in actual block RAM usage.","type":"text"},{"text":"See %L for more information.","type":"text","links":[{"link":"https://www.altera.com/documentation/mwh1391807516407.html#chn1469549457114","guide":"Best Practices Guide : Local Memory"}]}],"Local memory":"Optimal","Implemented size":"12288 bytes","Bank width":"1024 bits","type":"table","Requested size":"4096 bytes"}]},{"name":"matrix_mult.cl:112 (B_local)","type":"resource","data":[0,0,52,0],"details":[{"Total replication":3,"Number of banks":"2 (banked on lowest dimension)","Bank depth":"16 words","Additional information":[{"text":"Requested size 4096 bytes, implemented size 12288 bytes, replicated 3 times total, stall-free, 2 reads and 2 writes. ","type":"text"},{"text":"Replicated 3 times to efficiently support multiple simultaneous workgroups. This replication resulted in no increase in actual block RAM usage.","type":"text"},{"text":"Banked on lowest dimension into 2 separate banks.","type":"text"},{"text":"See %L for more information.","type":"text","links":[{"link":"https://www.altera.com/documentation/mwh1391807516407.html#chn1469549457114","guide":"Best Practices Guide : Local Memory"}]}],"Local memory":"Optimal","Implemented size":"12288 bytes","Bank width":"1024 bits","type":"table","Requested size":"4096 bytes"}]},{"name":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl:123","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":123}]],"replace_name":"true","type":"resource","data":[66,0,0,2],"children":[{"count":1,"name":"32-bit Integer Multiply","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":123}]],"type":"resource","data":[66,0,0,2]}]},{"replace_name":"true","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":124}]],"name":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl:124","children":[{"count":2,"name":"32-bit Integer Add","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":124}]],"type":"resource","data":[66,0,0,0]}],"data":[66,0,0,0],"type":"resource"},{"replace_name":"true","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":131}]],"name":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl:131","children":[{"count":2,"name":"Integer Compare","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":131}]],"type":"resource","data":[70,2,0,0]},{"count":2,"debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":131}]],"name":"32-bit Integer Add","data":[66,0,0,0],"type":"resource"}],"data":[136,2,0,0],"type":"resource"},{"replace_name":"true","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":139}]],"name":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl:139","children":[{"count":2,"name":"32-bit Integer Add","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":139}]],"type":"resource","data":[66,0,0,0]},{"count":1,"name":"32-bit Integer Multiply","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":139}]],"type":"resource","data":[66,0,0,2]},{"count":1,"debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":139}]],"name":"Load","data":[3247,3588,43,0],"type":"resource"},{"count":1,"debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":139}]],"name":"Store","data":[34,24,0,0],"type":"resource"}],"data":[3413,3612,43,2],"type":"resource"},{"replace_name":"true","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":140}]],"name":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl:140","children":[{"count":2,"name":"32-bit Integer Add","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":140}]],"type":"resource","data":[66,0,0,0]},{"count":1,"name":"32-bit Integer Multiply","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":140}]],"type":"resource","data":[66,0,0,2]},{"count":1,"debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":140}]],"name":"Load","data":[3247,3588,43,0],"type":"resource"},{"count":2,"debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":140}]],"name":"Store","data":[68,48,0,0],"type":"resource"}],"data":[3447,3636,43,2],"type":"resource"},{"name":"No Source Line","children":[{"count":2,"name":"State","debug":[[{"filename":"","line":0}]],"type":"resource","data":[4639,6698,86,0]},{"count":2,"debug":[[{"filename":"","line":0}]],"name":"Or","data":[11,0,0,0],"type":"resource"},{"count":3,"debug":[[{"filename":"","line":0}]],"name":"Work-group limiter exit","data":[51,99,0,0],"type":"resource"},{"count":2,"name":"Select","debug":[[{"filename":"","line":0}]],"type":"resource","data":[64,64,0,0]}],"type":"resource","data":[4765,6861,86,0]},{"replace_name":"true","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":155}]],"name":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl:155","children":[{"count":64,"name":"Floating-point Add","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":155}]],"type":"resource","data":[63936,45952,0,0]},{"count":64,"name":"Floating-point Multiply","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":155}]],"type":"resource","data":[17536,15360,0,64]},{"count":3,"name":"Load","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":155}]],"type":"resource","data":[1578,3099,0,0]}],"data":[83050,64411,0,64],"type":"resource"},{"replace_name":"true","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":164}]],"name":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl:164","children":[{"count":1,"name":"64-bit Integer Add","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":164}]],"type":"resource","data":[65,0,0,0]},{"count":1,"name":"64-bit Integer Multiply","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":164}]],"type":"resource","data":[66,0,0,2]},{"count":1,"name":"Store","debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl","line":164}]],"type":"resource","data":[354,2172,16,0]}],"data":[485,2172,16,2],"type":"resource"}],"data":[97293,82498,269,72],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"Achieved kernel vectorization: 2","type":"text"}],"compute_units":1}],"data":[128126,112235,412,72],"total_percent":[74.6792,56.4133,24.7083,33.7705,21.0526],"total":[128126,112235,412,72],"debug_enabled":"true","columns":["","ALUTs","FFs","RAMs","DSPs","Details"],"type":"module"}';
var mavJSON='{"nodes":[{"type":"kernel", "id":2, "name":"matrixMult_32_2", "children":[{"type":"bb", "id":3, "name":"matrixMult_32_2.B0", "details":[{"type":"table", "Latency":"7"}]}, {"type":"bb", "id":4, "name":"matrixMult_32_2.B1", "children":[{"type":"inst", "id":6, "name":"Load", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":140}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Burst-non-aligned", "Stall-free":"No", "Start Cycle":"3", "Latency":"149"}]}, {"type":"inst", "id":7, "name":"Load", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":139}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Burst-non-aligned", "Stall-free":"No", "Start Cycle":"3", "Latency":"149"}]}, {"type":"inst", "id":8, "name":"Store", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":140}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined", "Stall-free":"Yes", "Stores to":"B_local", "Start Cycle":"153", "Latency":"1"}]}, {"type":"inst", "id":9, "name":"Store", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":140}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined", "Stall-free":"Yes", "Stores to":"B_local", "Start Cycle":"153", "Latency":"1"}]}, {"type":"inst", "id":10, "name":"Store", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":139}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Pipelined", "Stall-free":"Yes", "Stores to":"A_local", "Start Cycle":"153", "Latency":"1"}]}, {"type":"inst", "id":11, "name":"Load", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":155}]], "details":[{"type":"table", "Width":"1024 bits", "Type":"Pipelined", "Stall-free":"Yes", "Loads from":"A_local", "Start Cycle":"668", "Latency":"3"}]}, {"type":"inst", "id":12, "name":"Load", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":155}]], "details":[{"type":"table", "Width":"1024 bits", "Type":"Pipelined", "Stall-free":"Yes", "Loads from":"B_local", "Start Cycle":"668", "Latency":"3"}]}, {"type":"inst", "id":13, "name":"Load", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":155}]], "details":[{"type":"table", "Width":"1024 bits", "Type":"Pipelined", "Stall-free":"Yes", "Loads from":"B_local", "Start Cycle":"668", "Latency":"3"}]}, {"type":"inst", "id":15, "name":"loop", "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"16"}]}, {"type":"inst", "id":16, "name":"loop end", "details":[{"type":"table", "Start Cycle":"1676", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"1676", "II":"0", "Subloops":"No", "Pipelined":"No", "Fmax Bottlenecks":"No", "Loop Info":"Loop is not pipelined. See Loops Analysis for more information."}]}, {"type":"bb", "id":5, "name":"matrixMult_32_2.B2", "children":[{"type":"inst", "id":14, "name":"Store", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":164}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Stores to":"C", "Start Cycle":"9", "Latency":"2"}]}, {"type":"inst", "id":17, "name":"begin", "details":[{"type":"table", "Start Cycle":"0", "Latency":"1"}]}, {"type":"inst", "id":18, "name":"end", "details":[{"type":"table", "Start Cycle":"11", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"11"}]}, {"type":"memtype", "id":19, "name":"Local Memory", "children":[{"type":"memsys", "id":20, "name":"A_local", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":111}]], "details":[{"type":"table", "Requested size":"4096 bytes", "Implemented size":"12288 bytes", "Number of banks":"1", "Bank width":"1024 bits", "Bank depth":"32 words", "Total replication":"3", "Additional Information":"Replicated 3 times to efficiently support multiple simultaneous workgroups"}]}, {"type":"memsys", "id":24, "name":"B_local", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":112}]], "details":[{"type":"table", "Requested size":"4096 bytes", "Implemented size":"12288 bytes", "Number of banks":"2", "Bank width":"1024 bits", "Bank depth":"16 words", "Total replication":"3", "Additional Information":"Replicated 3 times to efficiently support multiple simultaneous workgroups"}]}]}]}, {"type":"memtype", "id":1, "name":"Global Memory", "children":[{"type":"memsys", "id":31, "name":"DDR", "details":[{"type":"table", "Number of banks":"1"}]}]}], "links":[{"from":20, "to":11}, {"from":10, "to":20}, {"from":24, "to":12}, {"from":24, "to":13}, {"from":8, "to":24}, {"from":9, "to":24}, {"from":16, "to":15}, {"from":3, "to":15}, {"from":11, "to":16}, {"from":12, "to":16}, {"from":13, "to":16}, {"from":6, "to":16}, {"from":7, "to":16}, {"from":8, "to":16}, {"from":9, "to":16}, {"from":10, "to":16}, {"from":16, "to":17}, {"from":14, "to":18}, {"from":15, "to":6}, {"from":15, "to":7}, {"from":6, "to":8}, {"from":6, "to":9}, {"from":7, "to":10}, {"from":15, "to":11}, {"from":15, "to":12}, {"from":15, "to":13}, {"from":17, "to":14}, {"from":31, "to":6}, {"from":31, "to":7}, {"from":14, "to":31}]}';
var lmvJSON='{"nodes":[{"type":"kernel", "id":2, "name":"matrixMult_32_2", "children":[{"type":"inst", "id":8, "name":"Store", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":140}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined", "Stall-free":"Yes", "Stores to":"B_local", "Start Cycle":"153", "Latency":"1"}]}, {"type":"inst", "id":9, "name":"Store", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":140}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined", "Stall-free":"Yes", "Stores to":"B_local", "Start Cycle":"153", "Latency":"1"}]}, {"type":"inst", "id":10, "name":"Store", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":139}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Pipelined", "Stall-free":"Yes", "Stores to":"A_local", "Start Cycle":"153", "Latency":"1"}]}, {"type":"inst", "id":11, "name":"Load", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":155}]], "details":[{"type":"table", "Width":"1024 bits", "Type":"Pipelined", "Stall-free":"Yes", "Loads from":"A_local", "Start Cycle":"668", "Latency":"3"}]}, {"type":"inst", "id":12, "name":"Load", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":155}]], "details":[{"type":"table", "Width":"1024 bits", "Type":"Pipelined", "Stall-free":"Yes", "Loads from":"B_local", "Start Cycle":"668", "Latency":"3"}]}, {"type":"inst", "id":13, "name":"Load", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":155}]], "details":[{"type":"table", "Width":"1024 bits", "Type":"Pipelined", "Stall-free":"Yes", "Loads from":"B_local", "Start Cycle":"668", "Latency":"3"}]}, {"type":"memtype", "id":19, "name":"Local Memory", "children":[{"type":"memsys", "id":20, "name":"A_local", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":111}]], "children":[{"type":"bank", "id":21, "name":"Bank 0", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":111}]], "children":[{"type":"port", "id":22, "name":"R"}, {"type":"port", "id":23, "name":"W"}], "details":[{"type":"table", "Total number of ports per bank":"2", "Number of read ports per bank":"1", "Number of write ports per bank":"1", "Total replication":"3"}]}], "details":[{"type":"table", "Requested size":"4096 bytes", "Implemented size":"12288 bytes", "Number of banks":"1", "Bank width":"1024 bits", "Bank depth":"32 words", "Total replication":"3", "Additional Information":"Replicated 3 times to efficiently support multiple simultaneous workgroups"}]}, {"type":"memsys", "id":24, "name":"B_local", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":112}]], "children":[{"type":"bank", "id":25, "name":"Bank 0", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":112}]], "children":[{"type":"port", "id":28, "name":"R"}, {"type":"port", "id":30, "name":"W"}], "details":[{"type":"table", "Total number of ports per bank":"2", "Number of read ports per bank":"1", "Number of write ports per bank":"1", "Total replication":"3"}]}, {"type":"bank", "id":26, "name":"Bank 1", "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":112}]], "children":[{"type":"port", "id":27, "name":"R"}, {"type":"port", "id":29, "name":"W"}], "details":[{"type":"table", "Total number of ports per bank":"2", "Number of read ports per bank":"1", "Number of write ports per bank":"1", "Total replication":"3"}]}], "details":[{"type":"table", "Requested size":"4096 bytes", "Implemented size":"12288 bytes", "Number of banks":"2", "Bank width":"1024 bits", "Bank depth":"16 words", "Total replication":"3", "Additional Information":"Replicated 3 times to efficiently support multiple simultaneous workgroups"}]}]}]}], "links":[{"from":22, "to":11}, {"from":10, "to":23}, {"from":27, "to":12}, {"from":28, "to":13}, {"from":8, "to":29}, {"from":9, "to":30}]}';
var loopsJSON='{"columns":["", "Pipelined", "II", "Bottleneck", "Details"], "children":[{"name":"Kernel: matrixMult_32_2", "data":["", "", ""], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":109}]], "details":[{"type":"brief", "text":"ND-Range"}, {"type":"text", "text":"ND-Range"}], "children":[{"name":"matrixMult_32_2.B1", "data":["No", "n/a", "n/a"], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":131}], [{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":131}], [{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":153}], [{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":161}]], "details":[{"type":"brief", "text":"Thread capacity = 2048"}, {"type":"text", "text":"Thread capacity = 2048"}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":153}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}]}]}]}';
var summaryJSON='{"performanceSummary":{"name":"Kernel Summary", "columns":["Kernel Name", "Kernel Type", "Autorun", "Workgroup Size", "# Compute Units"], "children":[{"name":"matrixMult_32_2", "data":["NDRange", "No", [32, 32, 1], 1], "details":[{"type":"text", "text":"Kernel type: NDRange"}, {"type":"text", "text":"Vectorization: The kernel was vectorized for 2 SIMD work-items along the lowest dimension."}, {"type":"text", "text":"Required workgroup size: (32, 32, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1024"}], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":109}]]}]}, "estimatedResources":{"name":"Estimated Resource Usage", "columns":["Kernel Name", "ALUTs ", "FFs  ", "RAMs ", "DSPs "], "children":[{"name":"matrixMult_32_2", "data":[97293, 82498, 269, 72], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":109}]]}, {"name":"Global Interconnect", "classes":["summary-highlight", "nohover"], "data":[6577, 8915, 0, 0]}, {"name":"Board Interface", "classes":["summary-highlight", "nohover"], "data":[24256, 20822, 143, 0]}, {"name":"Total", "classes":["summary-highlight", "nohover"], "data":[128126, 112235, 412, 72], "data_percent":[56.4133, 24.7083, 33.7705, 21.0526]}, {"name":"Available", "classes":["summary-highlight", "nohover"], "data":[227120, 454240, 1220, 342]}]}, "compileWarnings":{"name":"Compile Warnings", "children":[{"name":"Load uses a Burst-coalesced non-aligned cached LSU", "details":[{"type":"text", "text":"Load with a private 64 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":140}]]}, {"name":"Load uses a Burst-coalesced non-aligned cached LSU", "details":[{"type":"text", "text":"Load with a private 64 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}], "debug":[[{"filename":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "line":139}]]}]}}';
var infoJSON='{"name":"Info","rows":[{"name":"Project Name","data":["matrix_mult"],"classes":["info-table"]},{"name":"Target Family, Device, Board","data":["Cyclone V, 5CGXFC9D6F27C7, c5p:c5p"]},{"name":"AOC Version","data":["17.1.0 Build 590"]},{"name":"Quartus Version","data":["17.1.0 Build 590"]},{"name":"Command","data":["aoc device/matrix_mult.cl -o bin/matrix_mult_32_2.aocx -board=c5p -report -v"]},{"name":"Reports Generated At", "data":["Mon Nov  4 01:57:49 2019"]}]}';
var warningsJSON='{"rows":[{"name":"Vectorized kernel contains loads/stores that cannot be vectorized. This might redu...","details":["Compiler Warning: Vectorized kernel contains loads/stores that cannot be vectorized. This might reduce performance."]}]}';
var fileJSON=[{"path":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/../host/inc/matrixMult.h", "name":"matrixMult.h", "has_active_debug_locs":false, "absName":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/host/inc/matrixMult.h", "content":"// Copyright (C) 2013-2018 Altera Corporation, San Jose, California, USA. All rights reserved.\012// Permission is hereby granted, free of charge, to any person obtaining a copy of this\012// software and associated documentation files (the \"Software\"), to deal in the Software\012// without restriction, including without limitation the rights to use, copy, modify, merge,\012// publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to\012// whom the Software is furnished to do so, subject to the following conditions:\012// The above copyright notice and this permission notice shall be included in all copies or\012// substantial portions of the Software.\012// \012// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\012// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\012// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\012// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\012// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\012// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\012// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\012// OTHER DEALINGS IN THE SOFTWARE.\012// \012// This agreement shall be governed in all respects by the laws of the State of California and\012// by the laws of the United States of America.\012\012#ifndef MATRIXMULT_H\012#define MATRIXMULT_H\012\012// Block size. Affects the kernel, so if this value changes, the kernel\012// needs to be recompiled.\012#ifndef BLOCK_SIZE\012#define BLOCK_SIZE 32 // default value\012#endif\012\012#endif\012\012"}, {"path":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "name":"matrix_mult.cl", "has_active_debug_locs":true, "absName":"/home/tf-diego/Escritorio/TFG/Matrix_OpenCL/matrix_mult_32_8/matrix_mult/device/matrix_mult.cl", "content":"// Copyright (C) 2013-2018 Altera Corporation, San Jose, California, USA. All rights reserved.\012// Permission is hereby granted, free of charge, to any person obtaining a copy of this\012// software and associated documentation files (the \"Software\"), to deal in the Software\012// without restriction, including without limitation the rights to use, copy, modify, merge,\012// publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to\012// whom the Software is furnished to do so, subject to the following conditions:\012// The above copyright notice and this permission notice shall be included in all copies or\012// substantial portions of the Software.\012// \012// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\012// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\012// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\012// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\012// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\012// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\012// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\012// OTHER DEALINGS IN THE SOFTWARE.\012// \012// This agreement shall be governed in all respects by the laws of the State of California and\012// by the laws of the United States of America.\012\012// This kernel computes C = A * B, where\012//  A is a N x K matrix\012//  B is a K x M matrix\012//  C is a N x M matrix\012// All dimensions must be a multiple of BLOCK_SIZE (defined below).\012//\012// The ND-range is two-dimensional and corresponds to the dimensions of matrix\012// C. Each work-item computes one element of the output matrix.\012//\012// The implemented algorithm uses blocking to take advantage of data reuse\012// across multiple elements in matrix C. This is just like the standard loop\012// tiling optimization often used in matrix multiplication implementations.\012//\012// This kernel is intended to be compiled with the following compiler flags:\012//  --no-interleaving default\012//    This flag indicates that the global memory is divided into two logical\012//    banks and allows the host program to assign buffers to specific buffers.\012//    This allows the host to manage the load on each memory bank, usually\012//    to maximize the memory bandwidth usage.\012//\012//    This flag is used for matrix multiplication because there are\012//    two primary memory accesses: reads from matrix A and reads from\012//    matrix B. To maximize memory bandwidth, the two input matrices\012//    are placed in different memory banks, which ensures that there is no\012//    contention when trying to read elements from both matrices\012//    simultaneously.\012// \012//  -fp-relaxed=true\012//    This flag enables the order of additions in the dot product \012//    computation within a block to be rearranged. This enables the additions\012//    to be computed more efficiently in hardware, using a tree structure\012//    instead of a vine. \012//\012//    As a simple example, take the addition of four values: a0 + a1 + a2 + a3.\012//    The default implementation (without -fp-relaxed=true) is:\012//      (((a0 + a1) + a2) + a3)\012//    which matches the standard ordering of operations. In hardware, this\012//    looks like:\012//         a0   a1\012//          |-+-|\012//            |   a2\012//            |-+-|\012//              |   a3\012//              |-+-|\012//                |\012//\012//    With -fp-relaxed=true, the implementation is a balanced tree:\012//      ((a0 + a1) + (a2 + a3))\012//    In hardware, this looks like:\012//          a0   a1   a2   a3\012//           |-+-|     |-+-|\012//             |         |\012//             |----+----|\012//                  |\012//\012// There are two values that need to be defined in the preprocessor.\012//  BLOCK_SIZE\012//    The dimension of the block used in the core computation\012//    is BLOCK_SIZE x BLOCK_SIZE. This is defined in the host\012//    include file because the host needs to know too (just to\012//    ensure that the matrix sizes are a multiple of the block\012//    size.\012//  SIMD_WORK_ITEMS\012//    This value tells the compiler how many work-items in the work-group\012//    in a SIMD fashion. In the context of matrix multiplication, this\012//    value indicates how many output elements will be computed\012//    in a SIMD manner. BLOCK_SIZE must be a multiple of SIMD_WORK_ITEMS.\012//    See the Optimization Guide for details about this attribute.\012//\012//  The combination of these values determines the number of floating-point\012//  operations per cycle.\012\012#include \"../host/inc/matrixMult.h\"\012\012#ifndef SIMD_WORK_ITEMS\012#define SIMD_WORK_ITEMS 2 // default value\012#endif\012\012__kernel \012__attribute((reqd_work_group_size(BLOCK_SIZE,BLOCK_SIZE,1)))\012__attribute((num_simd_work_items(SIMD_WORK_ITEMS)))\012void matrixMult_32_2( // Input and output matrices\012                 __global float *restrict C,\012                 __global float *restrict A,\012                 __global float *restrict B, \012                 // Widths of matrices.\012                 int A_width, int B_width)\012{\012    // Local storage for a block of input matrices A and B\012    __local float A_local[BLOCK_SIZE][BLOCK_SIZE];\012    __local float B_local[BLOCK_SIZE][BLOCK_SIZE];\012\012    // Block index\012    int block_x = get_group_id(0);\012    int block_y = get_group_id(1);\012\012    // Local ID index (offset within a block)\012    int local_x = get_local_id(0);\012    int local_y = get_local_id(1);\012\012    // Compute loop bounds\012    int a_start = A_width * BLOCK_SIZE * block_y;\012    int a_end   = a_start + A_width - 1;\012    int b_start = BLOCK_SIZE * block_x;\012\012    float running_sum = 0.0f;\012\012    // Compute the matrix multiplication result for this output element. Each\012    // loop iteration processes one block of the matrix.\012    for (int a = a_start, b = b_start; a <= a_end; a += BLOCK_SIZE, b += (BLOCK_SIZE * B_width))\012    {\012        // Load the matrices to local memory. Note that the (x, y) indices\012        // are swapped for A_local and B_local. This affects the reads from\012        // A_local and B_local below and result in more efficient hardware.\012        //\012        // This is actually an optimization that the compiler can perform,\012        // but is shown here for illustration purposes.\012        A_local[local_y][local_x] = A[a + A_width * local_y + local_x];\012        B_local[local_x][local_y] = B[b + B_width * local_y + local_x];\012	\012        // Wait for the entire block to be loaded.\012        barrier(CLK_LOCAL_MEM_FENCE);\012\012        // Do the dot product accumulation within this block. Fully unroll the loop.\012        // As a result of the swap of indices above, memory accesses to\012        // A_local and B_local are very efficient because each loop iteration\012        // accesses consecutive elements. This can be seen by unrolling the\012        // loop and analyzing the regions that are loaded:\012        //  A_local[local_y][0..BLOCK_SIZE-1] and\012        //  B_local[local_x][0..BLOCK_SIZE-1]\012        #pragma unroll\012        for (int k = 0; k < BLOCK_SIZE; ++k)\012        {\012            running_sum += A_local[local_y][k] * B_local[local_x][k];\012        }\012\012        // Wait for the block to be fully consumed before loading the next\012        // block.\012        barrier(CLK_LOCAL_MEM_FENCE);\012    }\012\012    // Store result in matrix C\012    C[get_global_id(1) * get_global_size(0) + get_global_id(0)] = running_sum;\012}\012"}];